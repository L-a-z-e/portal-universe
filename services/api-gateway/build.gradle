plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.portal.universe'
version = '0.0.1-SNAPSHOT'
description = 'api-gateway'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    // Spring Cloud의 버전 관리를 위한 변수
    set('springCloudVersion', "2025.0.0")
}

dependencies {
    // =======================================
    // Spring Cloud & Microservice Core
    // =======================================
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway-server-webflux' // Non-blocking API Gateway
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client' // Service Discovery
    implementation 'org.springframework.cloud:spring-cloud-starter-config' // Externalized Configuration
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j' // Circuit Breaker

    // =======================================
    // Security (OAuth2 & JWT)
    // =======================================
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server' // JWT 토큰 검증 및 리소스 서버 기능
    implementation 'org.springframework.security:spring-security-oauth2-jose' // JOSE (Javascript Object Signing and Encryption) 라이브러리

    // =======================================
    // Observability (Monitoring & Tracing)
    // =======================================
    implementation 'org.springframework.boot:spring-boot-starter-actuator' // Health Check, Metrics
    implementation 'io.micrometer:micrometer-registry-prometheus' // Prometheus-compatible metrics
    implementation 'io.micrometer:micrometer-tracing-bridge-brave' // Distributed Tracing (Brave)
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave' // Tracing data reporter for Zipkin

    // =======================================
    // Etc.
    // =======================================
    // macOS aarch64 환경에서 Netty DNS 문제 해결을 위한 네이티브 의존성
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.94.Final:osx-aarch_64'

    // =======================================
    // Testing
    // =======================================
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Spring Cloud 종속성 버전 관리를 위한 BOM(Bill of Materials)
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}