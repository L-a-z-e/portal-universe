server {
    listen 80;
    server_name _;

    # 로깅
    access_log /var/log/nginx/access.log proxy_log;
    error_log /var/log/nginx/error.log warn;

    # 루트 디렉토리
    root /usr/share/nginx/html;
    index index.html;

    # Health check (Kubernetes probe용)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # API Gateway 프록시 (OIDC 인증 및 백엔드 API 요청)
    location /api/ {
        # API Gateway로 프록시
        proxy_pass http://api-gateway:8080;

        # 필수: Host 헤더 보존
        proxy_set_header Host $host;

        # 필수: X-Forwarded-* 헤더 설정 (OIDC redirect URI 생성에 필요)
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # 리다이렉트 처리
        proxy_redirect off;

        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 버퍼링 설정
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Auth Service 프록시
    location /auth-service/ {
        proxy_pass http://api-gateway:8080;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        proxy_redirect off;
    }

    # SPA 라우팅 지원
    location / {
        try_files $uri $uri/ /index.html;

        # CORS 설정
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;

        # OPTIONS preflight 처리
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            add_header Content-Length 0;
            return 204;
        }
    }

    # Federation 진입점 캐싱 방지
    location ~* \.(js|json)$ {
        add_header Access-Control-Allow-Origin * always;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires 0;
    }

    # Static assets 캐싱 (CSS, 이미지 등)
    location ~* \.(css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin * always;
    }
}